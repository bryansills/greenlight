{"version":3,"sources":["webpack:///./src/components/FullScreenMap.js","webpack:///./src/components/HeatMap.js","webpack:///./src/components/Dropdown.js","webpack:///./src/components/ObstructionMap.js","webpack:///./src/pages/index.js"],"names":["FullScreenMap","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","_updateDimensions","height","window","innerHeight","setState","inheritsLoose_default","_proto","prototype","componentWillMount","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","_this$props","props","children","rest","objectWithoutPropertiesLoose_default","react_default","a","createElement","Map","Object","assign","style","state","React","Component","HeatMap","position","zoom","points","FullScreenMap_FullScreenMap","center","TileLayer","attribution","url","HeatmapLayer_default","latitudeExtractor","m","longitudeExtractor","intensityExtractor","parseFloat","Dropdown","_onChange","event","onChange","target","value","_renderOptions","options","map","option","key","spinner","selectedOption","id","ObstructionMap","_onChangeObstruction","axios","get","then","res","data","catch","error","console","log","_this$state","HeatMap_HeatMap","Dropdown_Dropdown","__webpack_exports__","ObstructionMap_ObstructionMap"],"mappings":"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","file":"component---src-pages-index-js-d479c6735ce21907faa2.js","sourcesContent":["import React from \"react\"\nimport { Map } from \"react-leaflet\"\n\nexport class FullScreenMap extends React.Component {\n\n    componentWillMount() {\n        this._updateDimensions()\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this._updateDimensions)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this._updateDimensions)\n    }\n\n    _updateDimensions = () => {\n        const height = window.innerHeight\n        this.setState({ height: height })\n    }\n\n    render() {\n        const { children, ...rest } = this.props\n        return (\n            <Map style={{ height: this.state.height }} { ...rest }>\n                { children }\n            </Map>\n        )\n    }\n}\n","import React from \"react\"\nimport { TileLayer } from \"react-leaflet\"\nimport HeatmapLayer from \"react-leaflet-heatmap-layer\"\nimport { FullScreenMap } from \"./FullScreenMap\"\n\nexport class HeatMap extends React.Component {\n    render() {\n        const { position, zoom, points } = this.props\n\n        if (typeof window !== 'undefined') {\n            return (\n                <FullScreenMap center={position} zoom={zoom}>\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                    />\n                    <HeatmapLayer\n                        points={points}\n                        latitudeExtractor={m => m[0]}\n                        longitudeExtractor={m => m[1]}\n                        intensityExtractor={m => parseFloat(m[2])}\n                  />\n                </FullScreenMap>\n            )\n        } else {\n            return null\n        }\n    }\n}\n","import React from \"react\"\n\nexport class Dropdown extends React.Component {\n    _onChange = (event) => {\n        this.props.onChange(event.target.value)\n    }\n\n    _renderOptions = () => {\n        const { options } = this.props\n\n        return options.map(option => {\n            return <option key={option.key} value={option.key}>{ option.spinner }</option>\n        })\n    }\n\n    render() {\n        const { selectedOption } = this.props\n\n        return(\n            <div id=\"spinner_container\">\n                <select value={selectedOption} onChange={this._onChange}>\n                    { this._renderOptions() }\n                </select>\n            </div>\n        )\n    }\n}\n","import React from \"react\"\nimport axios from \"axios\"\nimport { HeatMap } from \"../components/HeatMap\"\nimport { Dropdown } from \"./Dropdown\"\nimport options from \"../data/obstructions\"\n\nexport class ObstructionMap extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            points: [],\n            selectedOption: options[0].key\n        }\n\n        axios.get(\"json/all/all.json\")\n            .then(res => this.setState({ points: res.data }))\n            .catch(error => console.log({ error }))\n    }\n\n    _onChangeObstruction = (key) => this.setState({ selectedOption: key })\n\n    render() {\n        const { position, zoom } = this.props\n        const { points, selectedOption } = this.state\n\n        return(\n            <div>\n                <HeatMap position={position} zoom={zoom} points={points} />\n                <Dropdown options={options} selectedOption={selectedOption} onChange={this._onChangeObstruction} />\n            </div>\n        )\n    }\n}\n","import React from \"react\"\nimport { ObstructionMap } from \"../components/ObstructionMap\"\n\nexport default () => {\n    return (\n        <div id={\"map\"}>\n            <ObstructionMap position={[41.881832, -87.623177]} zoom={11} />\n        </div>\n    )\n}\n"],"sourceRoot":""}