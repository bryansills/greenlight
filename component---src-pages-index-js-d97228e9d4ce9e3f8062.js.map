{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/utils/process.js","webpack:///./src/components/FullScreenMap.js","webpack:///./src/components/HeatMap.js","webpack:///./src/components/Dropdown.js","webpack:///./src/components/ObstructionMap.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_ObstructionMap__WEBPACK_IMPORTED_MODULE_1__","_utils_process__WEBPACK_IMPORTED_MODULE_2__","_ref","data","a","createElement","id","position","zoom","options","obstructions","result","getGroupedPoints","points","file","selectedOption","groupedMap","filter","obstruction","reduce","acc","_ref2","_Object$assign","lat","long","key","value","count","Object","assign","values","sort","left","right","map","_ref3","FullScreenMap","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","state","_updateDimensions","window","height","innerHeight","setState","forceUpdate","inheritsLoose_default","_proto","prototype","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","_this$props","props","children","rest","objectWithoutPropertiesLoose_default","react_default","Map","style","React","Component","HeatMap","className","mapStyle","FullScreenMap_FullScreenMap","center","TileLayer","attribution","url","HeatmapLayer_default","latitudeExtractor","m","longitudeExtractor","intensityExtractor","parseFloat","Dropdown","_onChange","event","onChange","target","_renderOptions","option","spinner","dropdownStyles","spinner_container","defaultProps","ObstructionMap","_onChangeObstruction","HeatMap_HeatMap","Dropdown_Dropdown"],"mappings":"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","file":"component---src-pages-index-js-d97228e9d4ce9e3f8062.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { ObstructionMap } from \"../components/ObstructionMap\"\nimport { getGroupedPoints } from \"../utils/process\"\n\nexport default ({ data }) => {\n    return (\n        <div id={\"map\"}>\n            <ObstructionMap\n                position={[41.881832, -87.623177]}\n                zoom={11}\n                options={data.obstructions.result}\n                getGroupedPoints={getGroupedPoints(data.points.file.result)} />\n        </div>\n    )\n}\n\nexport const query = graphql`\n    query {\n        obstructions: file(\n            sourceInstanceName: { eq: \"data\" },\n            relativePath: { eq: \"obstructions.json\" }\n        ) {\n            result: childrenObstructionsJson {\n                key,\n                spinner,\n                data\n            }\n        },\n        points: file(\n            sourceInstanceName: { eq: \"points\" },\n            relativePath: { eq: \"all.json\" }\n        ) {\n            file: childPointsJson {\n                result {\n                    lat,\n                    long,\n                    obstruction\n                }\n            }\n        }\n    }\n`\n","export const getGroupedPoints = (points) => (selectedOption) => {\n    const groupedMap = points\n        .filter(({obstruction}) => {\n            return obstruction === selectedOption || selectedOption === \"all\"\n        })\n        .reduce((acc, {lat, long}) => {\n            const key = `${lat},${long}`\n            const value = acc[key]\n            const count = value ? value.count : 0\n            return {\n                ...acc,\n                [key]: {\n                    lat,\n                    long,\n                    count: count + 1\n                }\n            }\n        }, {})\n\n    return Object.values(groupedMap)\n        .sort((left, right) => right.count - left.count)\n        .map(({ lat, long, count }) => [lat, long, count])\n}\n","import React from \"react\"\nimport { Map } from \"react-leaflet\"\n\nexport class FullScreenMap extends React.Component {\n    state = {}\n\n    componentDidMount() {\n        if (typeof window !== 'undefined') {\n            window.addEventListener(\"resize\", this._updateDimensions)\n            this._updateDimensions()\n        }\n    }\n\n    componentWillUnmount() {\n        if (typeof window !== 'undefined') {\n            window.removeEventListener(\"resize\", this._updateDimensions)\n        }\n    }\n\n    _updateDimensions = () => {\n        if (typeof window !== 'undefined') {\n            const height = window.innerHeight\n            this.setState({ height: height })\n            this.forceUpdate()\n        }\n    }\n\n    render() {\n        const { children, ...rest } = this.props\n        const height = this.state.height\n\n        if (typeof window !== 'undefined' && height) {\n            return (\n                <Map style={{ height }} { ...rest }>\n                    { children }\n                </Map>\n            )\n        } else {\n            return null\n        }\n    }\n}\n","import React from \"react\"\nimport { TileLayer } from \"react-leaflet\"\nimport HeatmapLayer from \"react-leaflet-heatmap-layer\"\nimport { FullScreenMap } from \"./FullScreenMap\"\nimport mapStyle from \"./map.module.css\"\n\nexport class HeatMap extends React.Component {\n    render() {\n        const { position, zoom, points } = this.props\n\n        return (\n            <div className={mapStyle.map}>\n                <FullScreenMap center={position} zoom={zoom}>\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                    />\n                    { points && points.length > 0 && <HeatmapLayer\n                        points={points}\n                        latitudeExtractor={m => m[0]}\n                        longitudeExtractor={m => m[1]}\n                        intensityExtractor={m => parseFloat(m[2])}\n                    /> }\n                </FullScreenMap>\n            </div>\n        )\n    }\n}\n","import React from \"react\"\nimport dropdownStyles from \"./dropdown.module.css\"\n\nexport class Dropdown extends React.Component {\n    static defaultProps = {\n        options: []\n    }\n\n    _onChange = (event) => {\n        this.props.onChange(event.target.value)\n    }\n\n    _renderOptions = () => {\n        const { options } = this.props\n\n        return options.map(option => {\n            return <option key={option.key} value={option.key}>{ option.spinner }</option>\n        })\n    }\n\n    render() {\n        const { selectedOption } = this.props\n\n        return(\n            <div className={dropdownStyles.spinner_container}>\n                <select value={selectedOption} onChange={this._onChange}>\n                    { this._renderOptions() }\n                </select>\n            </div>\n        )\n    }\n}\n","import React from \"react\"\nimport { HeatMap } from \"../components/HeatMap\"\nimport { Dropdown } from \"./Dropdown\"\n\nexport class ObstructionMap extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            selectedOption: props.options[0].key\n        }\n    }\n\n    _onChangeObstruction = (key) => this.setState({ selectedOption: key })\n\n    render() {\n        const { position, zoom, options, getGroupedPoints } = this.props\n        const { selectedOption } = this.state\n        const points = getGroupedPoints(selectedOption)\n\n        return(\n            <div>\n                <HeatMap position={position} zoom={zoom} points={points} />\n                <Dropdown options={options} selectedOption={selectedOption} onChange={this._onChangeObstruction} />\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}